name: Continuous Integration

on:
  pull_request:
  push:

jobs:
  check-linting-and-formatting:
    runs-on: ubuntu-latest
    steps:
      - name:  Install requirements
        run: |
          sudo apt-get update -y
          sudo apt-get install -y libblas-dev liblapack-dev

      - uses: actions/checkout@master

      - name: Install uv
        uses: astral-sh/setup-uv@v5

      - name: Check linting, formatting
        run: |
          make check-all

  check-multiplatform-builds:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [macos-latest, ubuntu-latest] # skip windows-latest for now
        python-version: ['3.9', '3.10', '3.13']
    steps:
      - name:  Install requirements (Linux)
        if: matrix.os == 'ubuntu-latest'
        run: |
          sudo apt-get update -y
          sudo apt-get install -y libblas-dev liblapack-dev

      - name:  Install requirements (Windows)
        if: matrix.os == 'windows-latest'
        run: |
          curl -L -o blas.lib https://icl.utk.edu/lapack-for-windows/libraries/VisualStudio/3.5.0/Static-INTEL/Win64/BLAS.lib;
          curl -L -o lapack.lib https://icl.utk.edu/lapack-for-windows/libraries/VisualStudio/3.5.0/Static-INTEL/Win64/LAPACK.lib;
          echo "LIB=$PWD" | Out-File -FilePath $Env:GITHUB_ENV -Encoding utf8 -Append
          echo "LIBPATH=$PWD" | Out-File -FilePath $Env:GITHUB_ENV -Encoding utf8 -Append

      - uses: actions/checkout@master

      - name: Install uv
        uses: astral-sh/setup-uv@v5

      - name: Set up Python
        run: |
          uv venv -p ${{ matrix.python-version }}
          rm .python-version

      - name: Install Requirements
        run: |
          make sync

      - name: Verify the distribution can be built
        run: |
          make build-dist

      - name: Run tests
        run: |
          make run-tests
