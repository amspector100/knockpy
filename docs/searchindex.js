Search.setIndex({"alltitles": {"A quick review of knockoffs": [[9, "A-quick-review-of-knockoffs"]], "API Reference": [[5, "api-reference"]], "Built-in feature statistics": [[9, "Built-in-feature-statistics"]], "Constructing knockoffs": [[9, "Constructing-knockoffs"]], "Contents:": [[6, null]], "Custom feature statistics with FeatureStatistic": [[9, "Custom-feature-statistics-with-FeatureStatistic"]], "FXSampler": [[0, "fxsampler"]], "Feature Statistics": [[5, "module-knockpy.knockoff_stats"]], "Gaussian and Fixed-X Knockoff Samplers": [[5, "module-knockpy.knockoffs"]], "Gaussian graphical model discovery": [[5, "module-knockpy.ggm"]], "Gaussian graphical models": [[9, "Gaussian-graphical-models"]], "Gaussian knockoffs galore": [[9, "Gaussian-knockoffs-galore"]], "GaussianSampler": [[1, "gaussiansampler"]], "Getting Started": [[7, "getting-started"]], "Group knockoffs": [[9, "Group-knockoffs"]], "Indices and tables": [[6, "indices-and-tables"]], "Installation": [[7, "installation"]], "Knockoff feature statistics": [[9, "Knockoff-feature-statistics"]], "KnockoffSampler": [[2, "knockoffsampler"]], "Kpytorch": [[5, "kpytorch"]], "MRC Knockoffs Primer": [[8, "MRC-Knockoffs-Primer"]], "Masked likelihood ratio (MLR) statistics": [[9, "Masked-likelihood-ratio-(MLR)-statistics"]], "Metropolized Samplers": [[5, "module-knockpy.metro"]], "Metropolized knockoff sampling": [[9, "Metropolized-knockoff-sampling"]], "Other functionality: group knockoffs and graphical model discovery": [[9, "Other-functionality:-group-knockoffs-and-graphical-model-discovery"]], "Quickly creating data-generating processes": [[5, "module-knockpy.dgp"]], "Quickstart": [[7, "quickstart"]], "S-matrix computation": [[5, "module-knockpy.smatrix"]], "The KnockoffFilter": [[5, "module-knockpy.knockoff_filter"]], "The KnockoffFilter class": [[9, "The-KnockoffFilter-class"]], "To-dos": [[9, "To-dos"]], "Tutorials": [[9, "Tutorials"]], "Utility functions": [[5, "module-knockpy.utilities"]], "Welcome to knockpy\u2019s documentation!": [[6, "welcome-to-knockpy-s-documentation"]], "What if installation fails?": [[7, "what-if-installation-fails"]], "produce_FX_knockoffs": [[3, "produce-fx-knockoffs"]], "produce_MX_gaussian_knockoffs": [[4, "produce-mx-gaussian-knockoffs"]]}, "docnames": ["api/knockpy.knockoffs.FXSampler", "api/knockpy.knockoffs.GaussianSampler", "api/knockpy.knockoffs.KnockoffSampler", "api/knockpy.knockoffs.produce_FX_knockoffs", "api/knockpy.knockoffs.produce_MX_gaussian_knockoffs", "apiref", "index", "installation", "mrcknock", "usage"], "envversion": {"nbsphinx": 4, "sphinx": 61, "sphinx.domains.c": 3, "sphinx.domains.changeset": 1, "sphinx.domains.citation": 1, "sphinx.domains.cpp": 9, "sphinx.domains.index": 1, "sphinx.domains.javascript": 3, "sphinx.domains.math": 2, "sphinx.domains.python": 4, "sphinx.domains.rst": 2, "sphinx.domains.std": 2, "sphinx.ext.todo": 2, "sphinx.ext.viewcode": 1}, "filenames": ["api/knockpy.knockoffs.FXSampler.rst", "api/knockpy.knockoffs.GaussianSampler.rst", "api/knockpy.knockoffs.KnockoffSampler.rst", "api/knockpy.knockoffs.produce_FX_knockoffs.rst", "api/knockpy.knockoffs.produce_MX_gaussian_knockoffs.rst", "apiref.rst", "index.rst", "installation.rst", "mrcknock.ipynb", "usage.ipynb"], "indexentries": {"apply_pool() (in module knockpy.utilities)": [[5, "knockpy.utilities.apply_pool", false]], "ar1() (in module knockpy.dgp)": [[5, "knockpy.dgp.AR1", false]], "artksampler (class in knockpy.metro)": [[5, "knockpy.metro.ARTKSampler", false]], "block_diag_sparse() (in module knockpy.kpytorch.mrcgrad)": [[5, "knockpy.kpytorch.mrcgrad.block_diag_sparse", false]], "block_equi_graph() (in module knockpy.dgp)": [[5, "knockpy.dgp.block_equi_graph", false]], "blockdiag_to_blocks() (in module knockpy.utilities)": [[5, "knockpy.utilities.blockdiag_to_blocks", false]], "blocktsampler (class in knockpy.metro)": [[5, "knockpy.metro.BlockTSampler", false]], "cache_conditional_proposal_params() (knockpy.metro.metropolizedknockoffsampler method)": [[5, "knockpy.metro.MetropolizedKnockoffSampler.cache_conditional_proposal_params", false]], "calc_group_sizes() (in module knockpy.utilities)": [[5, "knockpy.utilities.calc_group_sizes", false]], "calc_lars_path() (in module knockpy.knockoff_stats)": [[5, "knockpy.knockoff_stats.calc_lars_path", false]], "calc_min_group_eigenvalue() (in module knockpy.mac)": [[5, "knockpy.mac.calc_min_group_eigenvalue", false]], "calc_mineig() (in module knockpy.utilities)": [[5, "knockpy.utilities.calc_mineig", false]], "calc_mse() (in module knockpy.knockoff_stats)": [[5, "knockpy.knockoff_stats.calc_mse", false]], "center() (knockpy.metro.metropolizedknockoffsampler method)": [[5, "knockpy.metro.MetropolizedKnockoffSampler.center", false]], "check_psd_condition() (knockpy.knockoffs.knockoffsampler method)": [[2, "knockpy.knockoffs.KnockoffSampler.check_PSD_condition", false], [5, "knockpy.knockoffs.KnockoffSampler.check_PSD_condition", false]], "check_xk_validity() (knockpy.knockoffs.knockoffsampler method)": [[2, "knockpy.knockoffs.KnockoffSampler.check_xk_validity", false], [5, "knockpy.knockoffs.KnockoffSampler.check_xk_validity", false]], "chol2inv() (in module knockpy.utilities)": [[5, "knockpy.utilities.chol2inv", false]], "cholupdate() (in module knockpy.mrc)": [[5, "knockpy.mrc.cholupdate", false]], "combine_z_stats() (in module knockpy.knockoff_stats)": [[5, "knockpy.knockoff_stats.combine_Z_stats", false]], "compute_acc_prob() (knockpy.metro.metropolizedknockoffsampler method)": [[5, "knockpy.metro.MetropolizedKnockoffSampler.compute_acc_prob", false]], "compute_f() (knockpy.metro.metropolizedknockoffsampler method)": [[5, "knockpy.metro.MetropolizedKnockoffSampler.compute_F", false]], "compute_ggm_threshold() (in module knockpy.ggm)": [[5, "knockpy.ggm.compute_ggm_threshold", false]], "compute_residual_variance() (in module knockpy.knockoff_stats)": [[5, "knockpy.knockoff_stats.compute_residual_variance", false]], "compute_smatrix() (in module knockpy.smatrix)": [[5, "knockpy.smatrix.compute_smatrix", false]], "compute_smatrix_factored() (in module knockpy.smatrix)": [[5, "knockpy.smatrix.compute_smatrix_factored", false]], "construct_gibbs_grid() (in module knockpy.dgp)": [[5, "knockpy.dgp.construct_gibbs_grid", false]], "coords2num() (in module knockpy.dgp)": [[5, "knockpy.dgp.coords2num", false]], "cov2blocks() (in module knockpy.dgp)": [[5, "knockpy.dgp.cov2blocks", false]], "cov2corr() (in module knockpy.utilities)": [[5, "knockpy.utilities.cov2corr", false]], "create_correlation_tree() (in module knockpy.dgp)": [[5, "knockpy.dgp.create_correlation_tree", false]], "create_grouping() (in module knockpy.dgp)": [[5, "knockpy.dgp.create_grouping", false]], "create_proposal_params() (knockpy.metro.metropolizedknockoffsampler method)": [[5, "knockpy.metro.MetropolizedKnockoffSampler.create_proposal_params", false]], "create_sparse_coefficients() (in module knockpy.dgp)": [[5, "knockpy.dgp.create_sparse_coefficients", false]], "cv_score_model() (knockpy.knockoff_stats.featurestatistic method)": [[5, "knockpy.knockoff_stats.FeatureStatistic.cv_score_model", false]], "data_dependent_threshhold() (in module knockpy.knockoff_stats)": [[5, "knockpy.knockoff_stats.data_dependent_threshhold", false]], "deeppinkmodel (class in knockpy.kpytorch.deeppink)": [[5, "knockpy.kpytorch.deeppink.DeepPinkModel", false]], "deeppinkstatistic (class in knockpy.knockoff_stats)": [[5, "knockpy.knockoff_stats.DeepPinkStatistic", false]], "dgp (class in knockpy.dgp)": [[5, "knockpy.dgp.DGP", false]], "dirichletcorr() (in module knockpy.dgp)": [[5, "knockpy.dgp.DirichletCorr", false]], "discovered_edges() (in module knockpy.ggm)": [[5, "knockpy.ggm.discovered_edges", false]], "divide_computation() (in module knockpy.smatrix)": [[5, "knockpy.smatrix.divide_computation", false]], "erdosrenyi() (in module knockpy.dgp)": [[5, "knockpy.dgp.ErdosRenyi", false]], "estimate_covariance() (in module knockpy.utilities)": [[5, "knockpy.utilities.estimate_covariance", false]], "estimate_factor() (in module knockpy.utilities)": [[5, "knockpy.utilities.estimate_factor", false]], "factormodel() (in module knockpy.dgp)": [[5, "knockpy.dgp.FactorModel", false]], "featurestatistic (class in knockpy.knockoff_stats)": [[5, "knockpy.knockoff_stats.FeatureStatistic", false]], "fetch_cached_proposal_params() (knockpy.metro.metropolizedknockoffsampler method)": [[5, "knockpy.metro.MetropolizedKnockoffSampler.fetch_cached_proposal_params", false]], "fetch_group_nonnulls() (in module knockpy.utilities)": [[5, "knockpy.utilities.fetch_group_nonnulls", false]], "fetch_proposal_params() (knockpy.metro.metropolizedknockoffsampler method)": [[5, "knockpy.metro.MetropolizedKnockoffSampler.fetch_proposal_params", false]], "fetch_s() (knockpy.knockoffs.fxsampler method)": [[0, "knockpy.knockoffs.FXSampler.fetch_S", false], [5, "knockpy.knockoffs.FXSampler.fetch_S", false]], "fetch_s() (knockpy.knockoffs.gaussiansampler method)": [[1, "knockpy.knockoffs.GaussianSampler.fetch_S", false], [5, "knockpy.knockoffs.GaussianSampler.fetch_S", false]], "fetch_s() (knockpy.knockoffs.knockoffsampler method)": [[2, "knockpy.knockoffs.KnockoffSampler.fetch_S", false], [5, "knockpy.knockoffs.KnockoffSampler.fetch_S", false]], "fetch_s() (knockpy.metro.blocktsampler method)": [[5, "knockpy.metro.BlockTSampler.fetch_S", false]], "fetch_s() (knockpy.metro.gibbsgridsampler method)": [[5, "knockpy.metro.GibbsGridSampler.fetch_S", false]], "fetch_s() (knockpy.metro.metropolizedknockoffsampler method)": [[5, "knockpy.metro.MetropolizedKnockoffSampler.fetch_S", false]], "fit() (knockpy.knockoff_stats.deeppinkstatistic method)": [[5, "knockpy.knockoff_stats.DeepPinkStatistic.fit", false]], "fit() (knockpy.knockoff_stats.featurestatistic method)": [[5, "knockpy.knockoff_stats.FeatureStatistic.fit", false]], "fit() (knockpy.knockoff_stats.lassostatistic method)": [[5, "knockpy.knockoff_stats.LassoStatistic.fit", false]], "fit() (knockpy.knockoff_stats.margcorrstatistic method)": [[5, "knockpy.knockoff_stats.MargCorrStatistic.fit", false]], "fit() (knockpy.knockoff_stats.olsstatistic method)": [[5, "knockpy.knockoff_stats.OLSStatistic.fit", false]], "fit() (knockpy.knockoff_stats.randomforeststatistic method)": [[5, "knockpy.knockoff_stats.RandomForestStatistic.fit", false]], "fit() (knockpy.knockoff_stats.ridgestatistic method)": [[5, "knockpy.knockoff_stats.RidgeStatistic.fit", false]], "fit() (knockpy.mlr.mlr.mlr_fx_spikeslab method)": [[5, "knockpy.mlr.mlr.MLR_FX_Spikeslab.fit", false]], "fit() (knockpy.mlr.mlr.mlr_spikeslab method)": [[5, "knockpy.mlr.mlr.MLR_Spikeslab.fit", false]], "fit() (knockpy.mlr.mlr.mlr_spikeslab_splines method)": [[5, "knockpy.mlr.mlr.MLR_Spikeslab_Splines.fit", false]], "fit() (knockpy.mlr.mlr.oraclemlr method)": [[5, "knockpy.mlr.mlr.OracleMLR.fit", false]], "fit_lasso() (in module knockpy.knockoff_stats)": [[5, "knockpy.knockoff_stats.fit_lasso", false]], "fit_ridge() (in module knockpy.knockoff_stats)": [[5, "knockpy.knockoff_stats.fit_ridge", false]], "forward() (knockpy.ggm.knockoffggm method)": [[5, "knockpy.ggm.KnockoffGGM.forward", false]], "forward() (knockpy.knockoff_filter.knockofffilter method)": [[5, "knockpy.knockoff_filter.KnockoffFilter.forward", false]], "forward() (knockpy.kpytorch.deeppink.deeppinkmodel method)": [[5, "knockpy.kpytorch.deeppink.DeepPinkModel.forward", false]], "forward() (knockpy.kpytorch.mrcgrad.mvrloss method)": [[5, "knockpy.kpytorch.mrcgrad.MVRLoss.forward", false]], "fxsampler (class in knockpy.knockoffs)": [[0, "knockpy.knockoffs.FXSampler", false], [5, "knockpy.knockoffs.FXSampler", false]], "gaussian_log_likelihood() (in module knockpy.metro)": [[5, "knockpy.metro.gaussian_log_likelihood", false]], "gaussiansampler (class in knockpy.knockoffs)": [[1, "knockpy.knockoffs.GaussianSampler", false], [5, "knockpy.knockoffs.GaussianSampler", false]], "get_ordering() (in module knockpy.metro)": [[5, "knockpy.metro.get_ordering", false]], "gibbsgridsampler (class in knockpy.metro)": [[5, "knockpy.metro.GibbsGridSampler", false]], "graph2cliques() (in module knockpy.dgp)": [[5, "knockpy.dgp.graph2cliques", false]], "knockofffilter (class in knockpy.knockoff_filter)": [[5, "knockpy.knockoff_filter.KnockoffFilter", false]], "knockoffggm (class in knockpy.ggm)": [[5, "knockpy.ggm.KnockoffGGM", false]], "knockoffsampler (class in knockpy.knockoffs)": [[2, "knockpy.knockoffs.KnockoffSampler", false], [5, "knockpy.knockoffs.KnockoffSampler", false]], "knockpy.dgp": [[5, "module-knockpy.dgp", false]], "knockpy.ggm": [[5, "module-knockpy.ggm", false]], "knockpy.knockoff_filter": [[5, "module-knockpy.knockoff_filter", false]], "knockpy.knockoff_stats": [[5, "module-knockpy.knockoff_stats", false]], "knockpy.knockoffs": [[5, "module-knockpy.knockoffs", false]], "knockpy.kpytorch.deeppink": [[5, "module-knockpy.kpytorch.deeppink", false]], "knockpy.kpytorch.mrcgrad": [[5, "module-knockpy.kpytorch.mrcgrad", false]], "knockpy.mac": [[5, "module-knockpy.mac", false]], "knockpy.metro": [[5, "module-knockpy.metro", false]], "knockpy.mlr.mlr": [[5, "module-knockpy.mlr.mlr", false]], "knockpy.mrc": [[5, "module-knockpy.mrc", false]], "knockpy.smatrix": [[5, "module-knockpy.smatrix", false]], "knockpy.utilities": [[5, "module-knockpy.utilities", false]], "lassostatistic (class in knockpy.knockoff_stats)": [[5, "knockpy.knockoff_stats.LassoStatistic", false]], "lf() (knockpy.metro.metropolizedknockoffsampler method)": [[5, "knockpy.metro.MetropolizedKnockoffSampler.lf", false]], "lf_ratio() (knockpy.metro.metropolizedknockoffsampler method)": [[5, "knockpy.metro.MetropolizedKnockoffSampler.lf_ratio", false]], "log_q12() (knockpy.metro.metropolizedknockoffsampler method)": [[5, "knockpy.metro.MetropolizedKnockoffSampler.log_q12", false]], "make_selections() (knockpy.knockoff_filter.knockofffilter method)": [[5, "knockpy.knockoff_filter.KnockoffFilter.make_selections", false]], "many_ks_tests() (knockpy.knockoffs.knockoffsampler method)": [[2, "knockpy.knockoffs.KnockoffSampler.many_ks_tests", false], [5, "knockpy.knockoffs.KnockoffSampler.many_ks_tests", false]], "margcorrstatistic (class in knockpy.knockoff_stats)": [[5, "knockpy.knockoff_stats.MargCorrStatistic", false]], "maxent_loss() (in module knockpy.mrc)": [[5, "knockpy.mrc.maxent_loss", false]], "merge_groups() (in module knockpy.smatrix)": [[5, "knockpy.smatrix.merge_groups", false]], "metropolizedknockoffsampler (class in knockpy.metro)": [[5, "knockpy.metro.MetropolizedKnockoffSampler", false]], "mlr_fx_spikeslab (class in knockpy.mlr.mlr)": [[5, "knockpy.mlr.mlr.MLR_FX_Spikeslab", false]], "mlr_spikeslab (class in knockpy.mlr.mlr)": [[5, "knockpy.mlr.mlr.MLR_Spikeslab", false]], "mlr_spikeslab_splines (class in knockpy.mlr.mlr)": [[5, "knockpy.mlr.mlr.MLR_Spikeslab_Splines", false]], "mmi_loss() (in module knockpy.mrc)": [[5, "knockpy.mrc.mmi_loss", false]], "module": [[5, "module-knockpy.dgp", false], [5, "module-knockpy.ggm", false], [5, "module-knockpy.knockoff_filter", false], [5, "module-knockpy.knockoff_stats", false], [5, "module-knockpy.knockoffs", false], [5, "module-knockpy.kpytorch.deeppink", false], [5, "module-knockpy.kpytorch.mrcgrad", false], [5, "module-knockpy.mac", false], [5, "module-knockpy.metro", false], [5, "module-knockpy.mlr.mlr", false], [5, "module-knockpy.mrc", false], [5, "module-knockpy.smatrix", false], [5, "module-knockpy.utilities", false]], "mvr_loss() (in module knockpy.mrc)": [[5, "knockpy.mrc.mvr_loss", false]], "mvrloss (class in knockpy.kpytorch.mrcgrad)": [[5, "knockpy.kpytorch.mrcgrad.MVRLoss", false]], "nestedar1() (in module knockpy.dgp)": [[5, "knockpy.dgp.NestedAR1", false]], "num2coords() (in module knockpy.dgp)": [[5, "knockpy.dgp.num2coords", false]], "olsstatistic (class in knockpy.knockoff_stats)": [[5, "knockpy.knockoff_stats.OLSStatistic", false]], "optimize() (knockpy.kpytorch.mrcgrad.psgdsolver method)": [[5, "knockpy.kpytorch.mrcgrad.PSGDSolver.optimize", false]], "oraclemlr (class in knockpy.mlr.mlr)": [[5, "knockpy.mlr.mlr.OracleMLR", false]], "parse_logistic_flag() (in module knockpy.knockoff_stats)": [[5, "knockpy.knockoff_stats.parse_logistic_flag", false]], "parse_method() (in module knockpy.smatrix)": [[5, "knockpy.smatrix.parse_method", false]], "parse_y_dist() (in module knockpy.knockoff_stats)": [[5, "knockpy.knockoff_stats.parse_y_dist", false]], "partialcorr() (in module knockpy.dgp)": [[5, "knockpy.dgp.PartialCorr", false]], "permute_matrix_by_groups() (in module knockpy.utilities)": [[5, "knockpy.utilities.permute_matrix_by_groups", false]], "predict() (knockpy.kpytorch.deeppink.deeppinkmodel method)": [[5, "knockpy.kpytorch.deeppink.DeepPinkModel.predict", false]], "preprocess_groups() (in module knockpy.utilities)": [[5, "knockpy.utilities.preprocess_groups", false]], "produce_fx_knockoffs() (in module knockpy.knockoffs)": [[3, "knockpy.knockoffs.produce_FX_knockoffs", false], [5, "knockpy.knockoffs.produce_FX_knockoffs", false]], "produce_mx_gaussian_knockoffs() (in module knockpy.knockoffs)": [[4, "knockpy.knockoffs.produce_MX_gaussian_knockoffs", false]], "project() (knockpy.kpytorch.mrcgrad.mvrloss method)": [[5, "knockpy.kpytorch.mrcgrad.MVRLoss.project", false]], "psgdsolver (class in knockpy.kpytorch.mrcgrad)": [[5, "knockpy.kpytorch.mrcgrad.PSGDSolver", false]], "pull_s() (knockpy.kpytorch.mrcgrad.mvrloss method)": [[5, "knockpy.kpytorch.mrcgrad.MVRLoss.pull_S", false]], "q_ll() (knockpy.metro.metropolizedknockoffsampler method)": [[5, "knockpy.metro.MetropolizedKnockoffSampler.q_ll", false]], "random_permutation_inds() (in module knockpy.utilities)": [[5, "knockpy.utilities.random_permutation_inds", false]], "randomforeststatistic (class in knockpy.knockoff_stats)": [[5, "knockpy.knockoff_stats.RandomForestStatistic", false]], "ridgestatistic (class in knockpy.knockoff_stats)": [[5, "knockpy.knockoff_stats.RidgeStatistic", false]], "sample_ar1t() (in module knockpy.dgp)": [[5, "knockpy.dgp.sample_ar1t", false]], "sample_block_tmvn() (in module knockpy.dgp)": [[5, "knockpy.dgp.sample_block_tmvn", false]], "sample_data() (knockpy.dgp.dgp method)": [[5, "knockpy.dgp.DGP.sample_data", false]], "sample_gibbs() (in module knockpy.dgp)": [[5, "knockpy.dgp.sample_gibbs", false]], "sample_knockoffs() (knockpy.knockoff_filter.knockofffilter method)": [[5, "knockpy.knockoff_filter.KnockoffFilter.sample_knockoffs", false]], "sample_knockoffs() (knockpy.knockoffs.fxsampler method)": [[0, "knockpy.knockoffs.FXSampler.sample_knockoffs", false], [5, "knockpy.knockoffs.FXSampler.sample_knockoffs", false]], "sample_knockoffs() (knockpy.knockoffs.gaussiansampler method)": [[1, "knockpy.knockoffs.GaussianSampler.sample_knockoffs", false], [5, "knockpy.knockoffs.GaussianSampler.sample_knockoffs", false]], "sample_knockoffs() (knockpy.knockoffs.knockoffsampler method)": [[2, "knockpy.knockoffs.KnockoffSampler.sample_knockoffs", false]], "sample_knockoffs() (knockpy.metro.blocktsampler method)": [[5, "knockpy.metro.BlockTSampler.sample_knockoffs", false]], "sample_knockoffs() (knockpy.metro.gibbsgridsampler method)": [[5, "knockpy.metro.GibbsGridSampler.sample_knockoffs", false]], "sample_knockoffs() (knockpy.metro.metropolizedknockoffsampler method)": [[5, "knockpy.metro.MetropolizedKnockoffSampler.sample_knockoffs", false]], "sample_proposals() (knockpy.metro.metropolizedknockoffsampler method)": [[5, "knockpy.metro.MetropolizedKnockoffSampler.sample_proposals", false]], "sample_response() (in module knockpy.dgp)": [[5, "knockpy.dgp.sample_response", false]], "scale_sqrt_s() (knockpy.kpytorch.mrcgrad.mvrloss method)": [[5, "knockpy.kpytorch.mrcgrad.MVRLoss.scale_sqrt_S", false]], "scale_until_psd() (in module knockpy.utilities)": [[5, "knockpy.utilities.scale_until_PSD", false]], "score_model() (knockpy.knockoff_stats.featurestatistic method)": [[5, "knockpy.knockoff_stats.FeatureStatistic.score_model", false]], "seqstep_plot() (knockpy.knockoff_filter.knockofffilter method)": [[5, "knockpy.knockoff_filter.KnockoffFilter.seqstep_plot", false]], "shift_until_psd() (in module knockpy.utilities)": [[5, "knockpy.utilities.shift_until_PSD", false]], "solve_ciknock() (in module knockpy.mrc)": [[5, "knockpy.mrc.solve_ciknock", false]], "solve_equicorrelated() (in module knockpy.mac)": [[5, "knockpy.mac.solve_equicorrelated", false]], "solve_group_sdp() (in module knockpy.mac)": [[5, "knockpy.mac.solve_group_SDP", false]], "solve_maxent() (in module knockpy.mrc)": [[5, "knockpy.mrc.solve_maxent", false]], "solve_maxent_factored() (in module knockpy.mrc)": [[5, "knockpy.mrc.solve_maxent_factored", false]], "solve_mmi() (in module knockpy.mrc)": [[5, "knockpy.mrc.solve_mmi", false]], "solve_mrc_psgd() (in module knockpy.kpytorch.mrcgrad)": [[5, "knockpy.kpytorch.mrcgrad.solve_mrc_psgd", false]], "solve_mvr() (in module knockpy.mrc)": [[5, "knockpy.mrc.solve_mvr", false]], "solve_mvr_factored() (in module knockpy.mrc)": [[5, "knockpy.mrc.solve_mvr_factored", false]], "solve_sdp() (in module knockpy.mac)": [[5, "knockpy.mac.solve_SDP", false]], "srand() (in module knockpy.utilities)": [[5, "knockpy.utilities.srand", false]], "swap_feature_importances() (knockpy.knockoff_stats.featurestatistic method)": [[5, "knockpy.knockoff_stats.FeatureStatistic.swap_feature_importances", false]], "swap_path_feature_importances() (knockpy.knockoff_stats.featurestatistic method)": [[5, "knockpy.knockoff_stats.FeatureStatistic.swap_path_feature_importances", false]], "t_log_likelihood() (in module knockpy.metro)": [[5, "knockpy.metro.t_log_likelihood", false]], "t_markov_loglike() (in module knockpy.metro)": [[5, "knockpy.metro.t_markov_loglike", false]], "t_mvn_loglike() (in module knockpy.metro)": [[5, "knockpy.metro.t_mvn_loglike", false]], "uniformdot() (in module knockpy.dgp)": [[5, "knockpy.dgp.UniformDot", false]], "update_sqrt_s() (knockpy.kpytorch.mrcgrad.mvrloss method)": [[5, "knockpy.kpytorch.mrcgrad.MVRLoss.update_sqrt_S", false]], "wishart() (in module knockpy.dgp)": [[5, "knockpy.dgp.Wishart", false]]}, "objects": {"knockpy": [[5, 0, 0, "-", "dgp"], [5, 0, 0, "-", "ggm"], [5, 0, 0, "-", "knockoff_filter"], [5, 0, 0, "-", "knockoff_stats"], [5, 0, 0, "-", "knockoffs"], [5, 0, 0, "-", "mac"], [5, 0, 0, "-", "metro"], [5, 0, 0, "-", "mrc"], [5, 0, 0, "-", "smatrix"], [5, 0, 0, "-", "utilities"]], "knockpy.dgp": [[5, 1, 1, "", "AR1"], [5, 2, 1, "", "DGP"], [5, 1, 1, "", "DirichletCorr"], [5, 1, 1, "", "ErdosRenyi"], [5, 1, 1, "", "FactorModel"], [5, 1, 1, "", "NestedAR1"], [5, 1, 1, "", "PartialCorr"], [5, 1, 1, "", "UniformDot"], [5, 1, 1, "", "Wishart"], [5, 1, 1, "", "block_equi_graph"], [5, 1, 1, "", "construct_gibbs_grid"], [5, 1, 1, "", "coords2num"], [5, 1, 1, "", "cov2blocks"], [5, 1, 1, "", "create_correlation_tree"], [5, 1, 1, "", "create_grouping"], [5, 1, 1, "", "create_sparse_coefficients"], [5, 1, 1, "", "graph2cliques"], [5, 1, 1, "", "num2coords"], [5, 1, 1, "", "sample_ar1t"], [5, 1, 1, "", "sample_block_tmvn"], [5, 1, 1, "", "sample_gibbs"], [5, 1, 1, "", "sample_response"]], "knockpy.dgp.DGP": [[5, 3, 1, "", "sample_data"]], "knockpy.ggm": [[5, 2, 1, "", "KnockoffGGM"], [5, 1, 1, "", "compute_ggm_threshold"], [5, 1, 1, "", "discovered_edges"]], "knockpy.ggm.KnockoffGGM": [[5, 3, 1, "", "forward"]], "knockpy.knockoff_filter": [[5, 2, 1, "", "KnockoffFilter"]], "knockpy.knockoff_filter.KnockoffFilter": [[5, 3, 1, "", "forward"], [5, 3, 1, "", "make_selections"], [5, 3, 1, "", "sample_knockoffs"], [5, 3, 1, "", "seqstep_plot"]], "knockpy.knockoff_stats": [[5, 2, 1, "", "DeepPinkStatistic"], [5, 2, 1, "", "FeatureStatistic"], [5, 2, 1, "", "LassoStatistic"], [5, 2, 1, "", "MargCorrStatistic"], [5, 2, 1, "", "OLSStatistic"], [5, 2, 1, "", "RandomForestStatistic"], [5, 2, 1, "", "RidgeStatistic"], [5, 1, 1, "", "calc_lars_path"], [5, 1, 1, "", "calc_mse"], [5, 1, 1, "", "combine_Z_stats"], [5, 1, 1, "", "compute_residual_variance"], [5, 1, 1, "", "data_dependent_threshhold"], [5, 1, 1, "", "fit_lasso"], [5, 1, 1, "", "fit_ridge"], [5, 1, 1, "", "parse_logistic_flag"], [5, 1, 1, "", "parse_y_dist"]], "knockpy.knockoff_stats.DeepPinkStatistic": [[5, 3, 1, "", "fit"]], "knockpy.knockoff_stats.FeatureStatistic": [[5, 3, 1, "", "cv_score_model"], [5, 3, 1, "", "fit"], [5, 3, 1, "", "score_model"], [5, 3, 1, "", "swap_feature_importances"], [5, 3, 1, "", "swap_path_feature_importances"]], "knockpy.knockoff_stats.LassoStatistic": [[5, 3, 1, "", "fit"]], "knockpy.knockoff_stats.MargCorrStatistic": [[5, 3, 1, "", "fit"]], "knockpy.knockoff_stats.OLSStatistic": [[5, 3, 1, "", "fit"]], "knockpy.knockoff_stats.RandomForestStatistic": [[5, 3, 1, "", "fit"]], "knockpy.knockoff_stats.RidgeStatistic": [[5, 3, 1, "", "fit"]], "knockpy.knockoffs": [[5, 2, 1, "", "FXSampler"], [5, 2, 1, "", "GaussianSampler"], [5, 2, 1, "", "KnockoffSampler"], [5, 1, 1, "", "produce_FX_knockoffs"], [4, 1, 1, "", "produce_MX_gaussian_knockoffs"]], "knockpy.knockoffs.FXSampler": [[5, 3, 1, "", "fetch_S"], [5, 3, 1, "", "sample_knockoffs"]], "knockpy.knockoffs.GaussianSampler": [[5, 3, 1, "", "fetch_S"], [5, 3, 1, "", "sample_knockoffs"]], "knockpy.knockoffs.KnockoffSampler": [[5, 3, 1, "", "check_PSD_condition"], [5, 3, 1, "", "check_xk_validity"], [5, 3, 1, "", "fetch_S"], [5, 3, 1, "", "many_ks_tests"], [2, 3, 1, "", "sample_knockoffs"]], "knockpy.kpytorch": [[5, 0, 0, "-", "deeppink"], [5, 0, 0, "-", "mrcgrad"]], "knockpy.kpytorch.deeppink": [[5, 2, 1, "", "DeepPinkModel"]], "knockpy.kpytorch.deeppink.DeepPinkModel": [[5, 3, 1, "", "forward"], [5, 3, 1, "", "predict"]], "knockpy.kpytorch.mrcgrad": [[5, 2, 1, "", "MVRLoss"], [5, 2, 1, "", "PSGDSolver"], [5, 1, 1, "", "block_diag_sparse"], [5, 1, 1, "", "solve_mrc_psgd"]], "knockpy.kpytorch.mrcgrad.MVRLoss": [[5, 3, 1, "", "forward"], [5, 3, 1, "", "project"], [5, 3, 1, "", "pull_S"], [5, 3, 1, "", "scale_sqrt_S"], [5, 3, 1, "", "update_sqrt_S"]], "knockpy.kpytorch.mrcgrad.PSGDSolver": [[5, 3, 1, "", "optimize"]], "knockpy.mac": [[5, 1, 1, "", "calc_min_group_eigenvalue"], [5, 1, 1, "", "solve_SDP"], [5, 1, 1, "", "solve_equicorrelated"], [5, 1, 1, "", "solve_group_SDP"]], "knockpy.metro": [[5, 2, 1, "", "ARTKSampler"], [5, 2, 1, "", "BlockTSampler"], [5, 2, 1, "", "GibbsGridSampler"], [5, 2, 1, "", "MetropolizedKnockoffSampler"], [5, 1, 1, "", "gaussian_log_likelihood"], [5, 1, 1, "", "get_ordering"], [5, 1, 1, "", "t_log_likelihood"], [5, 1, 1, "", "t_markov_loglike"], [5, 1, 1, "", "t_mvn_loglike"]], "knockpy.metro.BlockTSampler": [[5, 3, 1, "", "fetch_S"], [5, 3, 1, "", "sample_knockoffs"]], "knockpy.metro.GibbsGridSampler": [[5, 3, 1, "", "fetch_S"], [5, 3, 1, "", "sample_knockoffs"]], "knockpy.metro.MetropolizedKnockoffSampler": [[5, 3, 1, "", "cache_conditional_proposal_params"], [5, 3, 1, "", "center"], [5, 3, 1, "", "compute_F"], [5, 3, 1, "", "compute_acc_prob"], [5, 3, 1, "", "create_proposal_params"], [5, 3, 1, "", "fetch_S"], [5, 3, 1, "", "fetch_cached_proposal_params"], [5, 3, 1, "", "fetch_proposal_params"], [5, 3, 1, "", "lf"], [5, 3, 1, "", "lf_ratio"], [5, 3, 1, "", "log_q12"], [5, 3, 1, "", "q_ll"], [5, 3, 1, "", "sample_knockoffs"], [5, 3, 1, "", "sample_proposals"]], "knockpy.mlr": [[5, 0, 0, "-", "mlr"]], "knockpy.mlr.mlr": [[5, 2, 1, "", "MLR_FX_Spikeslab"], [5, 2, 1, "", "MLR_Spikeslab"], [5, 2, 1, "", "MLR_Spikeslab_Splines"], [5, 2, 1, "", "OracleMLR"]], "knockpy.mlr.mlr.MLR_FX_Spikeslab": [[5, 3, 1, "", "fit"]], "knockpy.mlr.mlr.MLR_Spikeslab": [[5, 3, 1, "", "fit"]], "knockpy.mlr.mlr.MLR_Spikeslab_Splines": [[5, 3, 1, "", "fit"]], "knockpy.mlr.mlr.OracleMLR": [[5, 3, 1, "", "fit"]], "knockpy.mrc": [[5, 1, 1, "", "cholupdate"], [5, 1, 1, "", "maxent_loss"], [5, 1, 1, "", "mmi_loss"], [5, 1, 1, "", "mvr_loss"], [5, 1, 1, "", "solve_ciknock"], [5, 1, 1, "", "solve_maxent"], [5, 1, 1, "", "solve_maxent_factored"], [5, 1, 1, "", "solve_mmi"], [5, 1, 1, "", "solve_mvr"], [5, 1, 1, "", "solve_mvr_factored"]], "knockpy.smatrix": [[5, 1, 1, "", "compute_smatrix"], [5, 1, 1, "", "compute_smatrix_factored"], [5, 1, 1, "", "divide_computation"], [5, 1, 1, "", "merge_groups"], [5, 1, 1, "", "parse_method"]], "knockpy.utilities": [[5, 1, 1, "", "apply_pool"], [5, 1, 1, "", "blockdiag_to_blocks"], [5, 1, 1, "", "calc_group_sizes"], [5, 1, 1, "", "calc_mineig"], [5, 1, 1, "", "chol2inv"], [5, 1, 1, "", "cov2corr"], [5, 1, 1, "", "estimate_covariance"], [5, 1, 1, "", "estimate_factor"], [5, 1, 1, "", "fetch_group_nonnulls"], [5, 1, 1, "", "permute_matrix_by_groups"], [5, 1, 1, "", "preprocess_groups"], [5, 1, 1, "", "random_permutation_inds"], [5, 1, 1, "", "scale_until_PSD"], [5, 1, 1, "", "shift_until_PSD"], [5, 1, 1, "", "srand"]]}, "objnames": {"0": ["py", "module", "Python module"], "1": ["py", "function", "Python function"], "2": ["py", "class", "Python class"], "3": ["py", "method", "Python method"]}, "objtypes": {"0": "py:module", "1": "py:function", "2": "py:class", "3": "py:method"}, "terms": {"": [0, 1, 2, 3, 4, 9], "0": [2, 5, 7, 8, 9], "0001": 5, "001": [2, 5], "00434": 5, "01": [5, 9], "01185": 5, "02757": 5, "03574": [1, 5], "03589": 5, "05": [0, 1, 5], "06": 5, "08790": 5, "09": 9, "1": [1, 3, 5, 7, 8, 9], "10": [5, 8, 9], "100": [5, 8, 9], "1000": [1, 5, 9], "11": 9, "110": 8, "111": 8, "11611": 5, "12": 9, "123": 9, "14": [7, 8], "1404": [3, 5], "15": 5, "1500": [5, 7], "1508": 5, "1602": [1, 5], "1809": 5, "1903": 5, "1908": 5, "1d": 5, "1e": [0, 1, 5], "1e9": 5, "2": [2, 5, 8, 9], "20": [5, 9], "200": 9, "2000": 5, "2006": 5, "2015": [5, 6, 9], "2016": 5, "2018": [1, 5, 6, 9], "2019": [5, 9], "2020": [8, 9], "2022": 9, "29": 7, "2d": 5, "2p": 5, "2sigma": 5, "3": [5, 8, 9], "30": [5, 9], "300": [5, 8, 9], "3000": 5, "31942": 5, "33": 5, "34": 5, "3x": 5, "4": [3, 5, 8, 9], "45": 8, "5": [1, 5, 8, 9], "50": [5, 8], "500": [5, 7, 8, 9], "55": 8, "5609": [3, 5], "6": [5, 9], "60": 9, "600": 8, "64": 5, "650": 8, "67": 8, "7": [5, 9], "8": [5, 9], "9": 9, "94": 8, "95": 5, "999": 5, "A": [5, 6, 8], "As": [8, 9], "By": 5, "For": [1, 5, 9], "If": [0, 1, 2, 5, 7, 9], "In": [1, 5, 8, 9], "Ising": 5, "It": 9, "NOT": 5, "OR": 5, "Of": 9, "One": [5, 7, 9], "The": [1, 2, 6], "Then": [5, 7], "There": [1, 5, 9], "These": 5, "To": [5, 6, 7], "_": 9, "_1": [5, 9], "__call__": 5, "__init__": 5, "_j": [8, 9], "_p": 9, "ab": [1, 5, 9], "abil": 9, "abov": 5, "absolut": [1, 5, 8, 9], "accept": [5, 9], "accord": 5, "account": [1, 5], "accuraci": 5, "achiev": [5, 9], "act": 9, "active_fonti": 5, "active_fronti": 5, "active_ind": 5, "actual": [5, 9], "adapt": 5, "add": 5, "addit": [5, 9], "adjust": [2, 5], "adjusted_mlr": 5, "advanc": 9, "after": [5, 9], "again": 9, "aim": 9, "al": [5, 6, 9], "algebra": 7, "algorithm": [5, 6, 7, 9], "all": [5, 7, 9], "allow": [1, 5, 9], "along": 5, "alpha": [2, 5], "alreadi": [5, 9], "also": [5, 6, 7, 8, 9], "altern": 5, "although": [5, 9], "alwai": [5, 9], "amlr": 5, "amount": 8, "an": [2, 5, 7, 8, 9], "analys": 9, "analyst": [6, 7], "ani": [5, 6, 8, 9], "antisym": 5, "antisymmetr": [5, 9], "anywai": 5, "api": [6, 9], "appendix": 5, "appli": [5, 6, 9], "applic": [5, 9], "apply_pool": [5, 6], "approach": [5, 8, 9], "approxim": [1, 5], "ar": [1, 2, 5, 6, 8, 9], "ar1": [5, 6, 8, 9], "ar1t": 5, "arang": 9, "arbitrari": [5, 9], "aren": 9, "arg": 5, "argument": [0, 5, 9], "around": [8, 9], "arr": 5, "arrai": [1, 2, 5, 9], "artk": [5, 9], "artksampl": [5, 6], "arxiv": [1, 3, 5], "assign": [5, 7, 9], "assum": [5, 9], "assumpt": 9, "astyp": 9, "attribut": 5, "automat": [5, 9], "autoregress": 5, "averag": 5, "avg": 5, "avoid": [5, 9], "axi": 5, "b": [5, 8, 9], "backward": 5, "barber": [1, 5, 6, 9], "barer": 5, "base": [0, 1, 2, 5, 6, 9], "basi": 5, "batch_length": 5, "bate": [5, 9], "becaus": 5, "becom": 5, "been": [5, 9], "befor": 5, "begin": 9, "belong": 5, "below": [1, 5, 7, 8, 9], "bernoulli": 5, "beta": [5, 8, 9], "beta_j": 9, "better": 8, "between": [1, 5, 8, 9], "bhq": [2, 5], "binari": [5, 7, 9], "binomi": 5, "block": [1, 5], "block_diag_spars": [5, 6], "block_equi_graph": [5, 6], "block_siz": 5, "blockdiag": 5, "blockdiag_to_block": [5, 6], "blockequi": 5, "blockt": 5, "blocktsampl": [5, 6], "bool": [0, 1, 5], "boolean": 5, "both": [1, 5, 9], "bottleneck": 5, "briefli": 9, "bucket": [5, 9], "build": 9, "built": [6, 7], "burn": 5, "burn_prop": 5, "c": [5, 7, 9], "cach": 5, "cache_": 5, "cache_conditional_proposal_param": 5, "calc_group_s": [5, 6], "calc_lars_path": [5, 6], "calc_min_group_eigenvalu": [5, 6], "calc_mineig": [5, 6], "calc_ms": [5, 6], "calc_whiteout_statist": 5, "calcul": [5, 8], "call": [5, 9], "can": [5, 6, 7, 9], "cand": [1, 5, 6, 9], "capabl": 9, "case": [1, 5, 8, 9], "caus": 9, "cd": 5, "center": 5, "chain": [5, 9], "challeng": 7, "chang": 5, "cheap": 5, "check": [0, 1, 2, 5, 9], "check_psd": [0, 1, 5], "check_psd_condit": [2, 5], "check_xk_valid": [2, 5], "choic": [5, 9], "chol2inv": [5, 6], "choldat": [5, 7], "choldate_warn": 5, "choleski": [5, 9], "cholupd": [5, 6], "choos": 9, "chosen": 5, "ci": [1, 5, 9], "class": [0, 1, 2, 5, 6], "clip": 5, "cliqu": [5, 9], "cluster": 5, "co": 5, "code": [5, 6], "coef": 5, "coeff": 5, "coeff_dist": [5, 8], "coeff_siz": [5, 8, 9], "coeffici": [5, 8, 9], "collect": 5, "column": 5, "com": [5, 7], "combin": [5, 6], "combine_z_stat": [5, 6], "command": 7, "comment": 9, "common": 9, "compat": 5, "compil": 7, "complet": 5, "complex": 5, "compon": 5, "comput": [6, 7, 9], "computation": 5, "compute_acc_prob": 5, "compute_f": 5, "compute_ggm_threshold": [5, 6], "compute_residual_vari": [5, 6], "compute_smatrix": [5, 6, 9], "compute_smatrix_factor": [5, 6], "compute_w": 5, "concaten": 5, "cond_mean": [5, 9], "cond_var": 5, "conda": 7, "condit": [1, 5, 9], "condition": 9, "configur": 7, "connect": 5, "conquer": 5, "consecut": 5, "consid": 8, "consist": 9, "constant": 5, "constant_input": 5, "constraint": [1, 5, 9], "construct": [1, 5, 6, 8], "construct_gibbs_grid": [5, 6], "constructor": [5, 9], "contain": [5, 7, 8, 9], "continu": [5, 9], "control": [5, 6, 9], "convent": 8, "converg": 5, "converge_tol": 5, "convergence_tol": 5, "convex": 5, "coordin": 5, "coords2num": [5, 6], "copi": [3, 4, 5], "cor": 8, "corr_matrix": 5, "corr_sign": [5, 8], "correct": [2, 5], "correctli": 7, "correl": [1, 5, 8, 9], "correspond": 5, "cost": 5, "cours": [5, 9], "cov": [1, 2, 5, 8, 9], "cov2block": [5, 6], "cov2corr": [5, 6], "covari": [1, 2, 5, 8, 9], "creat": [6, 9], "create_correlation_tre": [5, 6], "create_group": [5, 6], "create_proposal_param": 5, "create_sparse_coeffici": [5, 6, 8, 9], "criteria": 5, "cross": [5, 7, 9], "cubic": [5, 9], "current": [1, 5], "custom": 6, "cut": 5, "cutoff": 5, "cv": 5, "cv_score": 5, "cv_score_model": 5, "cvaccuraci": 5, "cvmse": 5, "cvxpy": 5, "cython": [7, 9], "d": 5, "dai": 5, "data": [6, 7, 8, 9], "data_dependent_threshhold": [5, 6], "data_gen_process": [7, 8], "datapoint": 7, "dataset": [5, 9], "debia": 5, "debias": 5, "decid": 5, "decomp": 5, "decompos": 5, "decreas": [5, 9], "deeppink": [5, 9], "deeppinkmodel": [5, 6], "deeppinkstatist": [5, 6], "def": 9, "defalt": [0, 1, 5], "default": [1, 2, 5, 7, 9], "defin": [1, 5, 8, 9], "degener": 5, "degre": 5, "delta": 5, "demonstr": 9, "denot": [5, 9], "densiti": [5, 9], "depend": [5, 9], "descent": 5, "describ": [5, 7], "descript": [0, 5], "design": [1, 2, 5, 9], "desir": [5, 9], "detail": [5, 6, 9], "detect": [5, 9], "determin": [5, 8], "develop": 6, "devic": 7, "df_t": 5, "dgp": [5, 6, 7, 8, 9], "dgprocess": [5, 9], "diag": 5, "diagon": [1, 5], "dict": [1, 5], "dictionari": 5, "differ": [1, 5], "different": 5, "dimens": 5, "dimension": [1, 5, 7, 8], "dimsion": 5, "directli": 9, "dirichlet": 5, "dirichletcorr": [5, 6], "discov": [5, 9], "discovered_edg": [5, 6], "discoveri": [6, 8], "discret": [5, 9], "discuss": [5, 8, 9], "distribut": [5, 7, 8, 9], "divid": 5, "divide_comput": [5, 6], "dlasso": 5, "do": [5, 6], "doc": 5, "document": [0, 1, 2, 5, 7], "doe": [2, 5], "domain": 5, "dot": [5, 8, 9], "downdat": 5, "dp": 5, "drawn": 5, "dsdp": 7, "dsdp_warn": 5, "due": [5, 7], "dure": [5, 7, 9], "duti": 7, "e": 5, "each": [1, 5, 8, 9], "easi": [6, 7], "easier": [8, 9], "easili": [6, 7, 9], "edg": [5, 9], "effect": [5, 9], "effici": [5, 9], "eig": 5, "eigenvalu": [1, 5], "either": 5, "element": 5, "els": 5, "empir": [1, 5], "empt": 5, "empti": 5, "enforc": [0, 1, 5], "ensur": [5, 8], "enter": 5, "entri": 5, "entropi": [5, 9], "environ": 7, "epoch": 5, "equal": 5, "equat": [3, 5], "equicorrel": [1, 5, 9], "equival": [1, 5, 9], "erdosrenyi": [5, 6], "error": [1, 2, 5, 9], "estim": [1, 2, 5, 9], "estimate_covari": [1, 5, 6], "estimate_factor": [5, 6], "et": [5, 6, 9], "evalu": 5, "even": 5, "evenli": 5, "eventu": 5, "exact": [5, 9], "exactli": 5, "exampl": [5, 7, 8, 9], "exce": 5, "except": [5, 9], "exclud": 5, "execut": 9, "exemplifi": 9, "exist": [5, 9], "exp": 5, "expect": 9, "expens": 5, "expensive_cach": 5, "explicit": 7, "explor": 9, "extend": 5, "extra": 5, "extrem": 5, "ey": 8, "f": [5, 8, 9], "factor": 5, "factormodel": [5, 6], "fail": 6, "fairli": [1, 5, 9], "fake": [5, 9], "fals": [0, 1, 5, 6, 8, 9], "familiar": 9, "fast": [5, 7, 9], "faster": [5, 9], "fdp": [8, 9], "fdr": [5, 6, 8, 9], "feasibl": 5, "featur": [1, 2, 6, 7, 8], "feature_import": [5, 9], "featurestatist": [5, 6], "fetch": [1, 2, 5], "fetch_": [0, 1, 2, 5], "fetch_cached_proposal_param": 5, "fetch_group_nonnul": [5, 6], "fetch_proposal_param": 5, "few": 6, "filter": [5, 8, 9], "filterwarn": 9, "final": 5, "final_acc_prob": 5, "find": 5, "finish": 5, "first": [5, 7, 9], "fit": [5, 9], "fit_lasso": [5, 6], "fit_ridg": [5, 6], "fithian": 9, "fix": [2, 6, 9], "flag": [5, 9], "flavor": 9, "flip": 5, "float": [1, 2, 5], "floor": 5, "follow": [5, 7, 9], "forc": 9, "forest": [5, 9], "form": 5, "formal": 9, "formul": 5, "forward": [5, 7, 8, 9], "four": 5, "fraction": 9, "framework": [6, 8, 9], "freedom": 5, "fro": 5, "from": [1, 5, 7, 8, 9], "fstat": [5, 7, 8, 9], "fstat_kwarg": [5, 9], "fulli": 9, "func": 5, "function": [1, 6, 7], "functool": 5, "futur": 7, "fx": [0, 5, 9], "fxsampler": [5, 6], "g": 5, "galor": 6, "gamma": 5, "gaussian": [1, 6, 7, 8], "gaussian_log_likelihood": [5, 6], "gaussiansampl": [0, 5, 6], "gener": [1, 2, 6, 7, 8, 9], "get": [2, 5, 6, 9], "get_ord": [5, 6], "ggm": [5, 9], "ggm_kwarg": 5, "gibb": 5, "gibbs_graph": 5, "gibbs_grid": 5, "gibbsgridsampl": [5, 6], "gimenez": 9, "gimenez19a": 5, "giminez": 9, "ginv": 5, "git": 7, "github": [5, 7], "given": [5, 7, 8, 9], "gkf": [5, 9], "gl": 5, "glasso": 5, "global": [5, 9], "go": 5, "good": [5, 9], "govern": 5, "gradient": 5, "grahm": 5, "graph": [5, 9], "graph2cliqu": [5, 6], "graphic": 6, "graphicallasso": [5, 9], "greater": [1, 5], "grid": 5, "gridlik": 5, "gridwidth": 5, "ground": 5, "group": [0, 1, 5, 6], "group_agg": 5, "guarante": [5, 9], "guid": [5, 9], "gwhere": 5, "ha": [5, 8, 9], "had": 8, "half": 5, "hard": 8, "have": [5, 7, 8, 9], "havoc": 9, "heavi": [7, 9], "help": 5, "henc": 5, "here": [5, 7, 9], "heurist": [5, 9], "hidden_s": 5, "hierarch": 5, "high": [1, 5], "higher": [8, 9], "highest": 9, "highli": 9, "homoskedast": 9, "hope": 7, "how": [1, 5, 7, 8, 9], "how_approx": 5, "howev": [7, 9], "http": [1, 3, 5], "hyperparamet": 5, "hyperprior": 5, "hypothes": 5, "hypothesi": 5, "i": [0, 1, 2, 5, 6, 7, 8, 9], "ident": 5, "identifi": [5, 9], "iff": 5, "ignor": [1, 2, 5, 9], "ii": 9, "iid_sign": 5, "illustr": 8, "implement": [1, 5, 6, 9], "import": [5, 7, 8, 9], "importantli": 7, "impos": 5, "improv": [5, 9], "includ": [5, 7, 9], "inclus": 5, "incorrect": [5, 7], "increas": [1, 5, 9], "ind": 5, "independ": [1, 5, 9], "independelti": 5, "index": [5, 6], "indic": [1, 5], "indistinguish": 9, "individu": 5, "inf": 5, "infer": [5, 6, 9], "infinit": 5, "inform": [1, 2, 5, 8, 9], "inheret": 9, "inherit": 5, "init_": 5, "init_kwarg": 5, "initi": [0, 5, 6, 9], "input": [0, 5, 9], "instabl": 5, "instal": [5, 6], "instanc": 5, "instanti": [5, 8, 9], "instead": 5, "instruct": 7, "int": [5, 9], "integ": [1, 5], "integr": [5, 9], "intens": 5, "interact": 5, "interest": 9, "intern": 5, "interpret": 5, "introduc": 9, "intuit": [8, 9], "inv_ord": 5, "invalid": 9, "invers": 5, "inversegamma": 5, "invert": 5, "invgamma": 5, "invm": 5, "invok": 5, "involv": 9, "invscal": 5, "invsigma": [1, 3, 4, 5], "issu": 5, "iter": 5, "ith": 5, "its": [1, 5, 9], "j": [1, 5, 8, 9], "janson": [8, 9], "jcrudi": 7, "joint": 5, "jointli": 5, "jth": 5, "junction": 5, "k": [2, 5], "ke": 9, "keep": [1, 5], "kei": 5, "kernel": 9, "kernel_ridg": 9, "kernelridg": 9, "keyword": 5, "kf": 5, "kf_lasso": 9, "kfilter": [5, 7, 9], "kfilter1": 9, "kfilter2": 9, "kfilter3": 9, "kfilter_metro": 9, "kfilter_mlr": 9, "kfilter_mlr_splin": 9, "kfilter_mvr": 8, "kfilter_sdp": 8, "knockoff": [0, 1, 2, 3, 4, 6, 7], "knockoff_filt": [5, 7, 8], "knockoff_kwarg": [5, 8, 9], "knockoff_stat": [5, 9], "knockofffilt": [6, 7, 8], "knockoffggm": [5, 6, 9], "knockoffsampl": [0, 1, 5, 6, 9], "knockpi": [0, 1, 2, 3, 4, 5, 7, 8, 9], "knot": 5, "know": 9, "known": [5, 7, 8, 9], "kpy": [5, 7, 8], "kpytorch": [6, 7], "kridg": 9, "kridge_fstat": 9, "ksampler": [5, 7, 8, 9], "kwarg": [0, 1, 5], "l1norm": 5, "l2norm": 5, "lambda": 5, "lar": 5, "larg": 5, "largest": 5, "lars_path": 5, "lasso": [5, 7, 8, 9], "lassocv": 5, "lassolarscv": 5, "lassostatist": [5, 6], "last": 5, "lastli": [7, 9], "later": 9, "layer": [5, 6, 7], "lcd": [5, 9], "lcoord": 5, "ld_ob": 5, "ld_prop": 5, "ld_ratio": 5, "lead": [5, 9], "learn": [5, 6, 7, 9], "least": [5, 9], "ledoitwolf": [5, 9], "length": [1, 5], "length_coord": 5, "less": 5, "let": 5, "level": [2, 5, 9], "lf": 5, "lf_ratio": 5, "li": [5, 9], "lie": 5, "lightweight": 7, "like": [5, 7, 9], "likelihood": [5, 6], "linalg": 9, "line": [5, 6], "line_search": 5, "line_search_it": 5, "linear": [5, 7, 8, 9], "linear_model": 5, "link": 5, "linux": 7, "list": [2, 5], "ll": 9, "locat": 5, "log": [5, 9], "log_likelihood": 9, "log_potenti": 5, "log_q1": 5, "log_q12": 5, "log_q2": 5, "logic": 5, "logistic_flag": 5, "logisticregressioncv": 5, "loglikelihood": 5, "long": 9, "loss": 5, "losscalc": 5, "low": 8, "lower": 5, "lp": [1, 5], "lr": 5, "lsm": [5, 9], "lu": [5, 9], "m": 5, "maathui": [5, 9], "mac": [1, 5, 8, 9], "machin": [6, 7, 9], "made": [8, 9], "magnitud": [7, 9], "mai": [5, 7, 9], "main": 9, "maintain": 5, "make": [5, 6, 7, 8, 9], "make_select": 5, "manag": 7, "mani": [5, 9], "many_ks_test": [2, 5], "map": 5, "margcorr": 5, "margcorrstatist": [5, 6], "margin": 5, "markov": [5, 9], "mask": [5, 6], "mathcal": 9, "mathemat": 5, "mathrm": 8, "matric": 5, "matrix": [0, 1, 2, 6, 7, 8, 9], "max": [8, 9], "max_block": 5, "max_corr": 5, "max_epoch": 5, "max_lambda": 5, "max_rank": 5, "max_siz": 5, "max_val": 5, "max_width": 5, "maxent": [5, 9], "maxent_loss": [5, 6], "maxent_tim": 9, "maxim": [5, 8, 9], "maximum": [5, 9], "mcmc": 5, "me": 9, "mean": [1, 5, 8, 9], "measur": [5, 9], "member": [1, 5], "memori": 5, "merg": 5, "merge_group": [5, 6], "method": [0, 1, 2, 5, 8, 9], "metric": 5, "metro": [5, 9], "metro_verbos": 5, "metropol": 6, "metropolizedknockoffsampl": [5, 6, 9], "metrosampl": 9, "mid": 9, "might": [5, 9], "mimimum": 5, "min": 9, "min_p0": 5, "min_smooth": 5, "minim": [1, 5, 8, 9], "minimizng": 5, "minimum": [1, 5, 7], "minu": 5, "miscallan": 5, "mixtur": 5, "mle": 5, "mlp": 5, "mlr": [5, 6], "mlr_fx_spikeslab": [5, 6], "mlr_spikeslab": [5, 6], "mlr_spikeslab_splin": [5, 6], "mlr_spline": 9, "mlrspline": 5, "mmi": [1, 5], "mmi_loss": [5, 6], "model": [6, 7, 8], "modest": 5, "modifi": [5, 9], "modul": [5, 6, 9], "modular": [6, 7], "more": [5, 6, 7, 8, 9], "most": [5, 7, 9], "motiv": 9, "mrc": [5, 6], "mrcgrad": 5, "mse": 5, "mu": [1, 4, 5], "much": [5, 8], "multipl": [2, 5], "multipli": 5, "multiprocess": 5, "multivari": 5, "multivariate_norm": [8, 9], "must": [5, 9], "mutual": [1, 5, 9], "mvr": [1, 5, 8, 9], "mvr_loss": [5, 6], "mvr_time": 9, "mvrloss": [5, 6], "mx": [1, 5], "my_func": 5, "n": [0, 1, 2, 5, 7, 8, 9], "n_iter": 5, "n_knot": 5, "n_mixtur": 5, "naiv": [5, 9], "natur": 9, "ndarrai": [1, 2, 5], "ne": 9, "nearli": [6, 7, 8], "necessarili": 5, "need": [7, 9], "neg": [5, 9], "nest_siz": 5, "nestedar1": [5, 6], "networkx": 5, "new": [5, 9], "next": 9, "nn": 5, "node": 5, "nois": 5, "nomin": 5, "non": [1, 5, 7, 8, 9], "non_nul": 5, "nonbinari": 5, "none": [0, 1, 2, 5], "nonlinear": 9, "nonzero": [1, 5], "norm": [1, 5], "norm_typ": [1, 5], "normal": [5, 9], "normalize_z": 5, "note": [5, 9], "noth": 5, "now": [5, 9], "np": [1, 2, 5, 8, 9], "nuc": 5, "null": [5, 8, 9], "num2coord": [5, 6], "num_factor": 5, "num_group": [1, 5], "num_it": 5, "num_mixtur": 5, "num_nest": 5, "num_process": 5, "number": [1, 5, 7, 8, 9], "numer": [1, 5], "numpi": [5, 8, 9], "nx": 5, "o": 9, "obei": 5, "object": [1, 2, 5, 9], "observ": 5, "obtain": 9, "octob": 5, "offer": 9, "offset": [5, 9], "often": [5, 8], "ol": 5, "olsstatist": [5, 6], "onc": 9, "one": [5, 8, 9], "ones": 8, "onli": [5, 6, 9], "oppos": 5, "opt_": 5, "optim": [1, 5, 7, 9], "optimize_kwarg": 5, "option": [1, 2, 5, 7, 9], "oracl": 5, "oraclemlr": [5, 6], "order": [5, 7, 9], "ordinari": 5, "org": [1, 3, 5], "origin": 5, "other": [1, 5, 6, 8], "otherwis": 5, "our": 9, "out": 9, "outcom": 9, "outer": 5, "outperform": 5, "output": 5, "over": [1, 5, 9], "p": [0, 1, 2, 5, 7, 8, 9], "p0": 5, "p0_a0": 5, "p0_b0": 5, "packag": [5, 7], "page": [5, 6], "pair": [5, 8], "pairint": 5, "pairwis": 5, "paper": 5, "parallel": 5, "param": 5, "paramet": [0, 1, 2, 5], "parse_logistic_flag": [5, 6], "parse_method": [5, 6], "parse_y_dist": [5, 6], "partial": [5, 9], "partialcorr": [5, 6], "particular": [5, 8, 9], "pass": [5, 9], "past": 9, "path": [5, 9], "pattern": 5, "pdf": [3, 5], "penal": 5, "per": 5, "perform": [5, 7, 8, 9], "permiss": 5, "permut": 5, "permute_matrix_by_group": [5, 6], "pf": 5, "pip": 7, "place": [5, 9], "plan": [5, 9], "platform": 7, "plot": [5, 9], "plu": 5, "pnorm": [1, 5], "point": [5, 8, 9], "polynomi": 9, "pool": 5, "poor": 5, "poorli": 8, "posit": [5, 8, 9], "possibl": [8, 9], "possibli": 5, "potenti": [5, 9], "power": [1, 5, 6, 8, 9], "powerless": 8, "pr": 5, "precis": 5, "precompil": 7, "predict": [5, 9], "preorder": 5, "preprocess_group": [5, 6], "prespecifi": 9, "press": 5, "prev_opt_": 5, "prev_propos": 5, "prevent": [1, 5, 9], "previou": 5, "primer": 6, "print": [1, 5, 8, 9], "prior": [5, 7], "probabl": 5, "probit": 5, "problem": [5, 9], "proceed": 5, "process": [6, 9], "produce_fx_knockoff": [5, 6], "product": 5, "progress": [1, 5], "project": 5, "proof": 5, "properli": 7, "properti": [5, 9], "proport": [1, 5, 9], "propos": [5, 9], "provabl": [5, 8], "provid": [5, 7, 9], "psd": [2, 5], "psgd": 5, "psgdsolver": [5, 6], "pull_": 5, "python": 6, "pytorch": [5, 7], "q": [5, 9], "q1": 5, "q2": 5, "q_ll": 5, "qer": 5, "quadrat": 5, "quick": [6, 7], "quickli": 6, "quickstart": 6, "quit": 5, "r": 5, "rais": [2, 5], "rand": 5, "randn": [5, 8, 9], "random": [5, 8, 9], "random_permutation_ind": [5, 6], "randomforest": [5, 9], "randomforeststatist": [5, 6], "randomli": 5, "rang": 9, "rank": 5, "rate": [5, 6, 8, 9], "ratio": [5, 6], "real": [5, 9], "rec_prop": [1, 5], "recommend": 5, "reconstruct": [1, 5, 7, 8, 9], "record": 9, "recycl": [1, 5], "recycle_up_to": 5, "reduc": 9, "redundantli": 9, "refer": [6, 9], "reg_val": 5, "regresison": 5, "regress": [5, 9], "regular": [1, 5], "rej_rat": 5, "reject": [5, 7, 9], "rel": 5, "releas": [5, 9], "reli": [5, 7], "reorder": 5, "repeat": [5, 9], "replac": [5, 9], "report": 5, "repres": 5, "requir": 5, "rescal": [0, 5], "research": [6, 7], "residu": 5, "respons": [5, 7, 9], "restrict": 9, "result": 5, "return": [0, 1, 5, 9], "rev_ind": 5, "revers": 5, "review": 6, "rho": [5, 8, 9], "ridg": [5, 9], "ridgecv": 5, "ridgestatist": [5, 6], "robust": 9, "roughli": 5, "round": 5, "routin": 7, "row": 5, "run": [2, 5, 7, 8, 9], "runtim": 5, "s_gener": [1, 5], "s_maxent": 9, "s_mvr": 9, "s_sdp": 9, "same": [0, 1, 5, 9], "sampl": [0, 1, 2, 5, 6, 8], "sample1": [2, 5], "sample2": [2, 5], "sample_ar1t": [5, 6], "sample_block_tmvn": [5, 6], "sample_data": [5, 7, 8, 9], "sample_gibb": [5, 6], "sample_knockoff": [0, 1, 2, 5, 9], "sample_propos": 5, "sample_respons": [5, 6], "sample_tol": [0, 1, 4, 5], "sampler": [6, 9], "samples1": [2, 5], "satisfi": 9, "save": 5, "scale": [0, 5], "scale_sqrt_": 5, "scale_until_psd": [5, 6], "scd": 5, "scikit": 7, "scipi": 5, "score": 5, "score_model": 5, "score_typ": 5, "scroll": 9, "sdp": [1, 5, 7, 8, 9], "sdp_time": 9, "search": [5, 6], "sec": 9, "second": [7, 9], "section": 9, "see": [0, 1, 3, 5, 6, 8, 9], "seed": [8, 9], "select": [5, 6, 7, 8, 9], "selections_mvr": 8, "selections_sdp": 8, "self": 5, "seqstep_plot": [5, 9], "sequenti": 5, "set": [1, 5, 8, 9], "sever": [1, 5], "sgd": 5, "shape": [1, 2, 5, 9], "shift_until_psd": [5, 6], "should": [1, 5, 7, 8, 9], "show": [2, 5], "shown": [7, 8, 9], "shrinkag": [2, 5, 9], "shuffl": 5, "sigma": [1, 2, 5, 7, 8, 9], "sigma2": 5, "sigma2_a0": 5, "sigma2_b0": 5, "sign": [5, 9], "sign_prob": 5, "signific": [2, 5], "sim": 9, "similar": 5, "similarli": 5, "simpl": 5, "simpli": [5, 9], "simplic": 9, "sinc": 9, "singl": 5, "situat": 8, "six": 5, "size": [5, 8, 9], "sklearn": [5, 9], "slab": 5, "slightli": [5, 9], "slow": [1, 5], "slower": [5, 7], "sm": 5, "small": [1, 5, 9], "smallest": 5, "smatrix": [5, 9], "smooth": 5, "so": [5, 6, 7, 9], "softmax": 5, "solv": [5, 9], "solve_ciknock": [5, 6], "solve_equicorrel": [5, 6], "solve_group_sdp": [5, 6], "solve_max": [5, 6], "solve_maxent_factor": [5, 6], "solve_mmi": [5, 6], "solve_mrc_psgd": [5, 6], "solve_mvr": [5, 6], "solve_mvr_factor": [5, 6], "solve_sdp": [5, 6], "solver": [1, 5, 9], "some": [5, 9], "somehow": 5, "sometim": 7, "sort": 5, "sound": 9, "sourc": [0, 1, 2, 3, 4, 5, 9], "space": 5, "spars": [1, 5, 8, 9], "sparsiti": [5, 7, 8, 9], "spawn": 5, "special": 5, "specifi": [1, 5, 9], "spector": [8, 9], "speed": [5, 7], "speedup": [5, 9], "spike": 5, "spline": [5, 9], "sqrt": 5, "sqrt_": 5, "squar": 5, "srand": [5, 6], "stabil": 5, "stabl": 5, "stai": 9, "stand": 5, "start": [5, 6], "stat": 9, "stationari": [5, 9], "statist": [6, 7], "step": 9, "step_siz": 5, "stephen": 5, "still": 9, "store": 5, "str": [1, 2, 5], "strength": 5, "string": 5, "structur": 5, "submodul": [5, 7], "substanti": 9, "subtract": 5, "success": 5, "suffici": [5, 9], "suit": 9, "sum": [1, 5, 8, 9], "sum_": 8, "summari": [0, 1, 2], "suppli": 5, "support": [5, 9], "suppos": 5, "swap": [5, 9], "swap_feature_import": 5, "swap_path_feature_import": 5, "swapint": [5, 9], "symmetr": 5, "syntax": 5, "synthet": [5, 7, 9], "system": 5, "t": [5, 9], "t_log_likelihood": [5, 6], "t_markov_loglik": [5, 6], "t_mvn_loglik": [5, 6], "tail": [5, 9], "take": [1, 5], "tau2": 5, "tau2_a0": 5, "tau2_b0": 5, "tell": 5, "temp": 5, "temporarili": 9, "tensor": 5, "term": 5, "test": [2, 5], "testnam": [2, 5], "text": [8, 9], "th": [1, 5, 9], "than": [1, 5, 8, 9], "thei": [5, 8, 9], "them": 5, "thi": [1, 2, 5, 7, 8, 9], "those": 5, "three": [5, 7, 9], "threshhold": [5, 9], "threshold": 5, "through": 5, "thu": 9, "tild": [1, 5, 8, 9], "tildex_": 5, "tildexj": 5, "time": [1, 5, 9], "time0": 9, "time1": 9, "time2": 9, "time3": 9, "todo": 5, "togeth": 5, "tol": 5, "too": 9, "took": 9, "tool": 6, "top": [5, 6, 7], "torch": 5, "trace": 5, "train": [5, 9], "train_kwarg": 5, "transform": 9, "treat": 9, "tree": 5, "treewidth": 5, "triangular": 5, "trick": 9, "true": [0, 1, 5, 8], "truncat": 5, "truncbeta": 5, "trunclinear": 5, "truth": 5, "try": [5, 9], "tune": [5, 9], "turn": [5, 9], "tutori": 6, "two": [5, 9], "type": [1, 5, 7, 9], "u": [5, 9], "under": [1, 5, 9], "underli": 5, "undir_graph": [5, 9], "undirect": [5, 9], "undo": 5, "ungroup": 5, "unif": 5, "uniform": [5, 8], "uniformdot": [5, 6], "unimport": 8, "uniqu": [5, 8], "unlik": 5, "unnorm": [5, 9], "unpermut": 5, "until": 5, "unweight": 5, "up": [2, 5, 7], "updat": 5, "update_p0": 5, "update_sigma2": 5, "update_sqrt_": 5, "update_tau2": 5, "upon": 5, "upper": 5, "us": [1, 2, 5, 6, 7, 8, 9], "usag": [6, 9], "use_lar": 5, "user": [5, 9], "usual": [5, 9], "util": [1, 6], "uu": 5, "v": 5, "v89": 5, "v_j": 5, "val": 5, "valdilid": 5, "valid": [0, 1, 2, 5, 7, 9], "validti": 9, "valu": [2, 5, 9], "var": [5, 9], "vari": 5, "variabl": [1, 5, 7, 9], "varianc": [1, 5, 9], "varieti": [2, 5, 7, 8, 9], "vector": [5, 7], "ver": 5, "verbos": [0, 1, 5, 9], "veri": [5, 8, 9], "version": [7, 9], "via": 9, "violat": 5, "visual": [5, 9], "w": 5, "wa": [5, 9], "wai": [5, 9], "want": 9, "warn": [5, 9], "wcoord": 5, "we": [1, 5, 7, 8, 9], "weight": 5, "well": [5, 9], "were": [5, 6], "what": [6, 9], "when": [1, 5, 8, 9], "where": [5, 7, 8, 9], "wherea": 9, "whether": [5, 9], "which": [5, 6, 7, 8, 9], "while": [5, 9], "whose": 5, "wide": 7, "width": 5, "width_coord": 5, "window": 7, "wishart": [5, 6], "within": 5, "without": 5, "word": 8, "work": [5, 7, 9], "would": 5, "wrap": [5, 9], "wrapper": 5, "wreak": 9, "written": 5, "x": [0, 1, 2, 3, 4, 6, 7, 8, 9], "x1": 5, "x_": [8, 9], "x_1": [8, 9], "x_dist": [5, 7], "x_flag": 5, "x_j": [8, 9], "x_metro": 9, "x_p": [8, 9], "x_prop": 5, "xcoord": 9, "xi": 5, "xj": [5, 8], "xjstar": 5, "xjstar_": 5, "xk": [2, 5, 9], "xnew": 5, "xnonlin": 9, "xp": 5, "xstar_": 5, "xtemp": 5, "xtilde_": 5, "y": [5, 7, 8, 9], "y_dist": 5, "y_metro": 9, "ycoord": 9, "yet": 5, "yield": 9, "ynonlin": 9, "you": [5, 7, 9], "z": 5, "z_swap": 5, "zero": [5, 8, 9], "zou": 9, "zstat": 5}, "titles": ["FXSampler", "GaussianSampler", "KnockoffSampler", "produce_FX_knockoffs", "produce_MX_gaussian_knockoffs", "API Reference", "Welcome to knockpy\u2019s documentation!", "Getting Started", "MRC Knockoffs Primer", "Tutorials"], "titleterms": {"": [5, 6], "A": 9, "The": [5, 9], "To": 9, "api": 5, "built": 9, "class": 9, "comput": 5, "construct": 9, "content": 6, "creat": 5, "custom": 9, "data": 5, "discoveri": [5, 9], "do": 9, "document": 6, "fail": 7, "featur": [5, 9], "featurestatist": 9, "fix": 5, "function": [5, 9], "fxsampler": 0, "galor": 9, "gaussian": [5, 9], "gaussiansampl": 1, "gener": 5, "get": 7, "graphic": [5, 9], "group": 9, "indic": 6, "instal": 7, "knockoff": [5, 8, 9], "knockofffilt": [5, 9], "knockoffsampl": 2, "knockpi": 6, "kpytorch": 5, "likelihood": 9, "mask": 9, "matrix": 5, "metropol": [5, 9], "mlr": 9, "model": [5, 9], "mrc": 8, "other": 9, "primer": 8, "process": 5, "produce_fx_knockoff": 3, "produce_mx_gaussian_knockoff": 4, "quick": 9, "quickli": 5, "quickstart": 7, "ratio": 9, "refer": 5, "review": 9, "sampl": 9, "sampler": 5, "start": 7, "statist": [5, 9], "tabl": 6, "tutori": 9, "util": 5, "welcom": 6, "what": 7, "x": 5}})